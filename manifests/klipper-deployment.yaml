piVersion: v1
kind: Namespace
metadata:
  name: klippertele
---
apiVersion: v1
kind: Service
metadata:
  name: klipper
  namespace: klippertele
  labels:
    app: klipper
spec:
  type: ClusterIP
  selector:
    app: klipper
  ports:
    - port: 80
      targetPort: klipper-port
      protocol: TCP
      name: klipper-svc
---
apiVersion: v1
kind: Service
metadata:
  name: telegram
  namespace: klippertele
  labels:
    app: telegram
spec:
  type: ClusterIP
  selector:
    app: telegram
  ports:
    - port: 80
      targetPort: telegram-port
      protocol: TCP
      name: telegram-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: klipper-deployment
  namespace: klippertele
  labels:
    app: klipper
spec:
  replicas: 3
  selector:
    matchLabels:
      app: klipper
  template:
    metadata:
      name: klipper
      labels:
        app: klipper
      annotations:
        linkerd.io/inject: "enabled"
    spec:
      containers:
        - name: klipper
          image: majestry/klipper:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "170m"
              memory: "300Mi"
          ports:
            - containerPort: 80
              name: klipper-port
          readinessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 20
            httpGet:
              port: 80
              path: /actuator/health
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 10
            periodSeconds: 20
            httpGet:
              port: 80
              path: /actuator/health
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 80
            failureThreshold: 15
            periodSeconds: 10
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegram-env
  namespace: klippertele
data:
  KLIPPER_HOSTNAME: "klipper"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-deployment
  namespace: klippertele
  labels:
    app: telegram
spec:
  replicas: 3
  selector:
    matchLabels:
      app: telegram
  template:
    metadata:
      name: telegram
      labels:
        app: telegram
      annotations:
        linkerd.io/inject: "enabled"
    spec:
      containers:
        - name: telegram
          image: majestry/telegram:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: telegram-env
          resources:
            limits:
              cpu: "300m"
              memory: "300Mi"
          ports:
            - containerPort: 8080
              name: telegram-port
          readinessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 20
            httpGet:
              port: 8080
              path: /actuator/health
          livenessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 10
            periodSeconds: 20
            httpGet:
              port: 8080
              path: /actuator/health
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            failureThreshold: 10
            periodSeconds: 10
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
